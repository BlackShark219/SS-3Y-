.686
.model flat, stdcall
option casemap: none
.data
X1 db 72, 13, 44, 60, 24
LENX1 EQU $ -X1 ; визначення довжини масиву X1 (в байтах !!!)
X2 db 17, 23, 14, 10, 22
LENX2 EQU $ -X2 ; визначення довжини масиву X2 (в байтах !!!)
Y1 dw LENX2 DUP(0FFFFh) ; занесення одиниць до пам'ятті-приймача
Y2 dw LENX2 DUP(0AAAAh) ; занесення контрольного коду до пам'ятті-приймача
.code
start:
xor ecx, ecx
mov cl, LENX2 ; завантаження кількості чисел в регистр-лічильник
mov esi,0
mov edi,0
mov eax,0
mt1: mov al, [X1+si] ; завантаження в регістр числа (8 біт) із масиву X1
mov ah, [X2+si] ; завантаження в регістр числа (8 біт) із масиву X2
mov [Y1+di], ax ; занесення в масив Y1 числа (16 біт) із регістру
not ax ; інвертування коду в регістрі (16 біт)
mov [Y2+di], ax ; занесення в масив Y2 числа (16 біт) із регістру
add si,1 ; зміна індексу для початкових масивів
add di,2 ; зміна індексу для масиву результату
loop mt1 ; зменшення (-1) лічильника і повторення при ECX/=0
ret
end start